from typing import List, Dict, Any, AsyncIterable, Optional\\nfrom dataclasses import dataclass\"\\\nimport re\"\\\nimport boto3\"\\\nfrom multi_agent_orchestrator.agents import Agent, AgentOptions\"\\\nfrom multi_agent_orchestrator.types import (ConversationMessage, ParticipantRole, BEDROCK_MODEL_ID_CLAUDE_3_HAIKU, TemplateVariables)\"\\\nfrom multi_agent_orchestrator.utils import conversation_to_dict, Logger\"\\\nfrom multi_agent_orchestrator.retrievers import Retriever\"\\\n\"\"\"\\n@dataclass\"\"\"\\nclass BedrockLLMAgentOptions(AgentOptions):\"\"\"\\n    streaming: Optional[bool] = None\"\"\"\\n    inference_config: Optional[Dict[str, Any]] = None\"\"\"\\n    guardrail_config: Optional[Dict[str, str]] = None\"\"\"\\n    retriever: Optional[Retriever] = None\"\"\"\\n    tool_config: Optional[Dict[str, Any]] = None\"\"\"\\n    custom_system_prompt: Optional[Dict[str, Any]] = None\"\"\"\\n\"\"\"\\nclass BedrockLLMAgent(Agent):\"\"\"\\n    def __init__(self, options: BedrockLLMAgentOptions):\"\"\"\\n        super().__init__(options)\\